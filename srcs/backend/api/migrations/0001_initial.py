# Generated by Django 4.2.17 on 2025-01-16 11:59

import api.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('alias', models.CharField(max_length=255)),
                ('password', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('created', models.DateField(auto_now=True)),
                ('is_online', models.BooleanField(default=False)),
                ('last_login', models.DateTimeField(auto_now=True)),
                ('wins', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('losses', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('friends', models.ManyToManyField(blank=True, to='api.user')),
            ],
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('player_amount', models.IntegerField(validators=[django.core.validators.MinValueValidator(4), django.core.validators.MaxValueValidator(16)])),
                ('players', models.ManyToManyField(related_name='tournaments', to='api.user')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.CharField(max_length=4096)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('chat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='api.chat')),
                ('sender', models.ForeignKey(on_delete=models.SET(api.models.anonymize), related_name='messages_sent', to='api.user')),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('result', models.CharField(max_length=255)),
                ('left_player', models.ForeignKey(on_delete=models.SET(api.models.anonymize), related_name='left_player_matches', to='api.user')),
                ('loser', models.ForeignKey(on_delete=models.SET(api.models.anonymize), related_name='lost_matches', to='api.user')),
                ('right_player', models.ForeignKey(on_delete=models.SET(api.models.anonymize), related_name='right_player_matches', to='api.user')),
                ('tournament', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='matches', to='api.tournament')),
                ('winner', models.ForeignKey(on_delete=models.SET(api.models.anonymize), related_name='won_matches', to='api.user')),
            ],
        ),
        migrations.AddField(
            model_name='chat',
            name='first_user',
            field=models.ForeignKey(on_delete=models.SET(api.models.anonymize), related_name='chats_as_first_user', to='api.user'),
        ),
        migrations.AddField(
            model_name='chat',
            name='second_user',
            field=models.ForeignKey(on_delete=models.SET(api.models.anonymize), related_name='chats_as_second_user', to='api.user'),
        ),
        migrations.AddConstraint(
            model_name='chat',
            constraint=models.UniqueConstraint(fields=('first_user', 'second_user'), name='unique_chat'),
        ),
    ]
