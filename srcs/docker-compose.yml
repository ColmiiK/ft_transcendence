services:
  frontend:
    build:
      context: frontend
    container_name: front
    ports:
      - "8000:80"
    volumes:
      - ./frontend:/usr/share/nginx/html
    networks:
      - transcendence
  backend:
    depends_on:
      db:
        condition: service_healthy
    build:
      context: backend
    command:
      [
        "python",
        "manage.py",
        "makemigrations",
        "&&",
        "python",
        "manage.py",
        "migrate",
      ]
    container_name: back
    ports:
      - "9000:9000"
    env_file:
      - .env
    volumes:
      - ./backend:/transcendence
    networks:
      - transcendence
  db:
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    build:
      context: database
    container_name: db
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - /home/$USER/sgoinfre/postgres_data:/transcendence
    networks:
      - transcendence
volumes:
  frontend:
  backend:
  db:
networks:
  transcendence:
